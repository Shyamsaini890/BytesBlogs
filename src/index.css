@import "tailwindcss";

body {
  background-color: oklch(0 0 0);
  width: 100vw;
  overflow-x: hidden;
  font-family: "Geist", sans-serif;
}

:root {
  --primary: oklch(0 0 0);
  --secondary: oklch(0.25 0 0);
  --secondary2: oklch(0.22 0 0);
  --secondary3: oklch(13.979% 0.00002 271.152);
  --secondary4: oklch(0.16 0 0);
  --secondary5: oklch(0.18 0 0);
  --ring: oklch(0.7200 0 0);
  --Accent: oklch(1.00 0 0);
  --Accent2: oklch(0.32 0 0);
  --Accent3: oklch(0.40 0 0);
  --Accent4: oklch(0.90 0 0);
}

.animatedButton {
  animation-duration: 10000ms;
}

.spark-button {
  --transition: 0.25s;
  --spark: 3s;
  --bg: black;
  background: var(--bg);
  padding: 6px 18px;
  display: grid;
  border-radius: 9999px;
  position: relative;
  overflow: hidden;
  box-shadow: 0 1000px 0 0 hsl(0 0% 20%) inset;
  transition: box-shadow var(--transition), background var(--transition),
    transform var(--transition);
}

.spark-button:hover .backdrop {
  background: rgb(20 20 20);
}

.spark-button:hover {
  transform: scale(1.05);
}

.spark-button .spark {
  position: absolute;
  inset: 0;
  border-radius: 9999px;
  rotate: 0deg;
  overflow: hidden;
  mask: linear-gradient(white, transparent 50%);
  animation: flip calc(var(--spark) * 2) infinite steps(2, end);
}

@keyframes flip {
  to {
    rotate: 360deg;
  }
}

.spark-button .spark:before {
  content: "";
  position: absolute;
  width: 200%;
  aspect-ratio: 1;
  inset: 0 auto auto 50%;
  z-index: -1;
  translate: -50% -15%;
  rotate: 0;
  transform: rotate(-90deg);
  opacity: 1;
  background: conic-gradient(from 0deg, transparent 0 340deg, white 360deg);
  transition: opacity var(--transition);
  animation: rotate var(--spark) linear infinite both;
}

.spark-button .backdrop {
  position: absolute;
  inset: 1px;
  background: var(--bg);
  border-radius: 9999px;
  transition: background var(--transition) opacity var(--transition);
}

@keyframes rotate {
  to {
    transform: rotate(90deg);
  }
}

.spark-button .text {
  z-index: 1;
  --Accent: oklch(1.00 0 0);
}

.ql-container {
  border: none !important;
}

.ql-toolbar {
  border: none !important;
  background-color: #111111 !important;
  border-top-left-radius: 0.5rem;
  border-top-right-radius: 0.5rem;

}

.ql-editor {
  border: none !important;
}

.ql-toolbar .ql-picker {
  color: white !important;
}

.ql-toolbar .ql-picker-options {
  background-color: #111111 !important;
  color: var(--Accent) !important;
  border-radius: 0.5rem;
}

/* Firefox */
* {
  scrollbar-width: thin;
  scrollbar-color: oklch(0.34 0 0) oklch(0 0 0);

}

/* Chrome, Edge, Safari */
*::-webkit-scrollbar {
  width: 6px;
}

*::-webkit-scrollbar-track {
  background: oklch(0 0 0);
}

*::-webkit-scrollbar-thumb {
  background-color: oklch(0.34 0 0);
  ;
  border-radius: 10px;
}


@theme inline {
  --animate-meteor-effect: meteor 5s linear infinite;

  @keyframes meteor {
    0% {
      transform: rotate(215deg) translateX(0);
      opacity: 1;
    }

    70% {
      opacity: 1;
    }

    100% {
      transform: rotate(215deg) translateX(-500px);
      opacity: 0;
    }
  }
}

@keyframes gradientShift {
  0% {
    background-position: 0% 50%;
  }

  100% {
    background-position: 100% 50%;
  }
}

.react-calendar-heatmap text {
  font-size: 8px;
}

.react-calendar-heatmap rect.color-empty {
  fill: #1a1a1a;
}

.react-calendar-heatmap rect.color-scale-1 {
  fill: #033A16;
}

.react-calendar-heatmap rect.color-scale-2 {
  fill: #196C2E;
}

.react-calendar-heatmap rect.color-scale-3 {
  fill: #2EA043;
}

.react-calendar-heatmap rect.color-scale-4 {
  fill: #56D364;
}

.react-tooltip {
  z-index: 99 !important;
  border-radius: 6px !important;
}

